// ********** BREAKPOINTS **********
$breakpoints: (
  "sm": 576px,
  "md": 768px,
  "lg": 992px,
  "xl": 1200px,
  "wd": 1600px
) !default;

// ********** MAIN MIXINS **********
@mixin global($class, $property, $value) {
  .#{$class},
  .#{$class}-all > * {
      #{$property}: #{$value};
  }
}

@mixin states($class, $property, $value) {
  .#{$class},
  .#{$class}-all > *,
  .#{$class}-on:hover,
  .#{$class}-on:focus,
  *:hover > .#{$class}-in,
  *:focus > .#{$class}-in,
  .#{$class}-one > *:hover,
  .#{$class}-one > *:focus,
  .#{$class}-many:hover > *,
  .#{$class}-many:focus > * {
    #{$property}: #{$value};
  }
}

/********** COLORS **********/
$hues: (
  "red":      (348,  83%, 47%), // Crimson
  "orange":   ( 33, 100%, 50%), // DarkOrange
  "yellow":   ( 51, 100%, 50%), // Gold
  "green":    (120,  61%, 50%), // LimeGreen
  "sky":      (195, 100%, 50%), // DeepSkyBlue
  "blue":     (210, 100%, 56%), // DodgerBlue
  "violet":   (271,  76%, 53%), // BlueViolet
  "pink":     (328, 100%, 54%)  // DeepPink
) !default;

$grayscale: (
  "black":  (0, 0%,   0%),
  "gray":   (0, 0%,  33%),
  "silver": (0, 0%,  67%),
  "white":  (0, 0%, 100%)
) !default;

$colors: $hues, $grayscale;

:root {
  /* hsl values */
  @each $color in $colors {
    @each $key, $value in $color {
      --#{$key}-hsl: #{$value};
    }
  }

  /* opaque colors */
  @each $color in $colors {
    @each $key, $value in $color {
      --#{$key}: hsl(var(--#{$key}-hsl));
    }
  }

  /* opacity */
  --dark: 0.8;
  --light: 0.2;

  /* transparent colors */
  @each $color in $colors {
    @each $key, $value in $color {
      --#{$key}-dark: hsla(var(--#{$key}-hsl), var(--dark));
      --#{$key}-light: hsla(var(--#{$key}-hsl), var(--light));
    }
  }
}

/********** COLOR **********/
@each $color in $colors {
  @each $key, $value in $color {
    @include states(#{$key}, "color", "var(--#{$key})");
  }
}

/********** BACKGROUND COLOR **********/
@each $color in $colors {
  @each $key, $value in $color {
    @include states("bg-#{$key}", "background-color", "var(--#{$key})");
    @include states("bg-#{$key}-dark", "background-color", "var(--#{$key}-dark)");
    @include states("bg-#{$key}-light", "background-color", "var(--#{$key}-light)");
  }
}

/********** FONT FAMILY **********/
$font-family: (
  "sans-serif": (Helvetica, sans-serif),
  "serif":      (Times, serif),
  "monospace":  (Courier, monospace),
  "cursive":    (Mistral, cursive),
  "fantasy":    (Impact, fantasy)
) !default;

:root {
  @each $key, $value in $font-family {
    --#{$key}: #{$value};
    }
}

@each $key, $value in $font-family {
  @include states("#{$key}", "font-family", "var(--#{$key})");
}

/********** FONT **********/
$font: (
  "bold":     "weight",
  "italic":   "style"
) !default;

@each $key, $value in $font {
  @include states("#{$key}", "font-#{$value}", $key);
}

/********** TEXT ALIGN **********/
$text-align: (
  "center":   center,
  "justify":  justify,
  "left":     left,
  "right":    right
) !default;

@each $key, $value in $text-align {
  @include global("#{$key}", "text-align", $value);
}

/********** TEXT TRANSFORM **********/
$trans: (
  "cap":  "capitalize",
  "up":   "uppercase",
  "low":  "lowercase"
) !default;

@each $key, $value in $trans {
  @include states("#{$key}", "text-transform", $value);
}

/********** TEXT DECORATION LINE **********/
$text-decoration-line: (
  "none":     none,
  "under":    underline,
  "over":     overline,
  "through":  line-through
) !default;

[class*="deco"] {
  text-decoration-line: underline;
}

@each $key, $value in $text-decoration-line {
  @include states("deco-#{$key}", "text-decoration-line", $value);
}

/********** TEXT DECORATION STYLE **********/
$text-decoration-style: (
  "dash":   dashed,
  "dot":    dotted,
  "double": double,
  "solid":  solid,
  "wavy":   wavy
) !default;

@each $key, $value in $text-decoration-style {
  @include states("deco-#{$key}", "text-decoration-style", $value);
}

/********** TEXT DECORATION COLOR **********/
@each $key, $value in $hues {
  @include states("deco-#{$key}", "text-decoration-color", "var(--#{$key})");
}
